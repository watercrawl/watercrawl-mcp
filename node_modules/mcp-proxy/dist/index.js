import {
  InMemoryEventStore,
  proxyServer,
  startHTTPStreamServer,
  startSSEServer
} from "./chunk-F2LFKNGG.js";

// src/tapTransport.ts
var tapTransport = (transport, eventHandler) => {
  const originalClose = transport.close.bind(transport);
  const originalOnClose = transport.onclose?.bind(transport);
  const originalOnError = transport.onerror?.bind(transport);
  const originalOnMessage = transport.onmessage?.bind(transport);
  const originalSend = transport.send.bind(transport);
  const originalStart = transport.start.bind(transport);
  transport.close = async () => {
    eventHandler({
      type: "close"
    });
    return originalClose?.();
  };
  transport.onclose = async () => {
    eventHandler({
      type: "onclose"
    });
    return originalOnClose?.();
  };
  transport.onerror = async (error) => {
    eventHandler({
      error,
      type: "onerror"
    });
    return originalOnError?.(error);
  };
  transport.onmessage = async (message) => {
    eventHandler({
      message,
      type: "onmessage"
    });
    return originalOnMessage?.(message);
  };
  transport.send = async (message) => {
    eventHandler({
      message,
      type: "send"
    });
    return originalSend?.(message);
  };
  transport.start = async () => {
    eventHandler({
      type: "start"
    });
    return originalStart?.();
  };
  return transport;
};
export {
  InMemoryEventStore,
  proxyServer,
  startHTTPStreamServer,
  startSSEServer,
  tapTransport
};
//# sourceMappingURL=index.js.map